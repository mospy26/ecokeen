package com.ecokeen.backend.api;

import com.ecokeen.backend.crudRepositories.TravelRepository;
import com.ecokeen.backend.model.Travel;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RequestMapping("api/v1/travels")
@RestController
public class TravelController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TravelRepository travelRepository;

    @PostMapping(path="add/{id}") // Map ONLY POST Requests
    public @ResponseBody Boolean addTravelHistory (@RequestParam String name,
                                        @RequestParam String carBrand,
                                        @PathVariable("id") Integer id,
                                        @RequestParam String email,
                                        @RequestParam String carType,
                                        @RequestParam String petrolType) {

        return true;
    }

    @GetMapping(path="/history/{id}")
    public @ResponseBody Iterable<Travel> getTravelHistory(
            @PathVariable("id") Integer id) {
        // SELECT * FROM Travel WHERE User.id = id
        return travelRepository.findLatest10(id);
    }

    @GetMapping(path="/average/{id}")
    public @ResponseBody Float getAverageFootprint(
            @PathVariable("id") Integer id) {
        return travelRepository.averageFootprint(id);
    }

    @GetMapping(path="/total/{id}")
    public @ResponseBody Float getTotalFootprint(
            @PathVariable("id") Integer id) {
        return travelRepository.totalFootprint(id);
    }
    @GetMapping(path="/worst/{id}")
    public @ResponseBody Float getWorstFootprint(
            @PathVariable("id") Integer id) {
        return travelRepository.worstFootprint(id);
    }

    @GetMapping(path="/best/{id}")
    public @ResponseBody Float getBestFootprint(
            @PathVariable("id") Integer id) {
        return travelRepository.bestFootprint(id);
    }

}